#=========================================================================
#                 Copyright (C)1999-2012 by Niels Basjes
#              SuckMT Website : http://oss.basjes.nl/SuckMT
#                       Author: SuckMT@Basjes.nl
#-------------------------------------------------------------------------
#  Project: SuckMT, a multithreaded suck replacement
#  Language: RedHat RPM spec file.
#=========================================================================
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   If you reuse code from SuckMT you are required to put a notice of 
#   this fact in both your manual and about box.
#
#=========================================================================

Vendor: Niels Basjes
Summary: SuckMT, a multithreaded suck replacement
Name: suckmt
Version: #VERSION#
Release: 1
Source: http://oss.basjes.nl/SuckMT/Files/suckmt-#VERSION#.tar.gz
Packager: Niels Basjes <SuckMT@Basjes.nl>
BuildRoot: /tmp/suck-%{PACKAGE_VERSION}-%{PACKAGE_RELEASE}
License: GPLv2
Group: News
Provides: suckmt
Requires: boost
BuildRequires: boost-devel

%description
SuckMT is intended to be a multithreaded replacement for suck (http://home.comcast.net/~bobyetman/) i.e. use client NNTP to download news messages from a news server. SuckMT automatically balances the download of all NEWS items over several NNTP socket connections thus actually using a lot more of the available bandwidth. To upload new messages back to the NNTP server you will still need tools from the suck package.

%prep
%setup
make configure
./configure --prefix=${RPM_BUILD_ROOT}

%build
make -j4

%install
make \
    rpminstall

%clean
if [ "${RPM_BUILD_ROOT}" != '/' ] ; then rm -rf ${RPM_BUILD_ROOT} ; fi

%files

%dir /var/spool/suckmt/in.coming/
%doc README ChangeLog INSTALL suckmt.lsm
/usr/doc/packages/suckmt/AUTHORS
/usr/doc/packages/suckmt/COPYING
/usr/doc/packages/suckmt/ChangeLog
/usr/doc/packages/suckmt/INSTALL
/usr/doc/packages/suckmt/NEWS
/usr/doc/packages/suckmt/README
/usr/doc/packages/suckmt/suckmt.ini.sample
/usr/doc/packages/suckmt/suckmt.lsm

%attr(- root root) /usr/bin/suckmt
%config /etc/suckmt/suckmt.ini

%post
echo "Creating default configuration file..."
CONFIG_FILE=/etc/suckmt/suckmt.ini

if [ -s ${CONFIG_FILE} ];
then
    NOW=`date`
    cp -f ${CONFIG_FILE} "${CONFIG_FILE}-backup-${NOW}"
    echo Your existing ${CONFIG_FILE} has been backed up as "${CONFIG_FILE}-backup-${NOW}"
else
    if [ -s ${CONFIG_FILE}.rpmorig ];
    then
        echo "It looks like you are upgrading (found ${CONFIG_FILE}.rpmorig)."
        echo "Automagically upgrading your original config file aswell:"
        cp ${CONFIG_FILE}.rpmorig ${CONFIG_FILE}
    fi
fi

/usr/bin/suckmt -init

# End of the file suckmt.spec
#=========================================================================
